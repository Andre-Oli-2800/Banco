unit DMTeste;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, FireDAC.Stan.Intf, FireDAC.Stan.Option,
  FireDAC.Stan.Param, FireDAC.Stan.Error, FireDAC.DatS, FireDAC.Phys.Intf,
  FireDAC.DApt.Intf, FireDAC.Stan.Async, FireDAC.DApt, FireDAC.UI.Intf,
  FireDAC.Stan.Def, FireDAC.Stan.Pool, FireDAC.Phys, FireDAC.VCLUI.Wait,
  Data.DB, FireDAC.Comp.Client, FireDAC.Comp.DataSet, FireDAC.Phys.MySQL,
  FireDAC.Phys.MySQLDef;

type
  TDM = class(TForm)
    FDQuery1: TFDQuery;
    Conexao: TFDConnection;
    Table1: TFDTable;
    dsTable1: TDataSource;
    FDPhysMySQLDriverLink1: TFDPhysMySQLDriverLink;
    procedure Table1BeforePost(DataSet: TDataSet);
    procedure Table1BeforeDelete(DataSet: TDataSet);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  DM: TDM;

implementation
{$R *.dfm}

uses Teste;

procedure TDM.Table1BeforeDelete(DataSet: TDataSet);
begin
DM.Table1.locate(''+formTeste.gridPessoas.Columns[0].Title.Caption+'', formTeste.gridPessoas.Columns[0].Field.Value,[]);
end;

procedure TDM.Table1BeforePost(DataSet: TDataSet);
begin
//showMessage(''+formTeste.gridPessoas.Columns[0].Title.Caption+'' + ' = ' + quostrtedstr(formTeste.gridPessoas.Columns[0].Field.Value));
DM.Table1.Filter := ''+formTeste.gridPessoas.Columns[0].Title.Caption+'' + ' = 2';
DM.Table1.Filtered := True;
end;

end.
